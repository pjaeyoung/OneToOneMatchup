#-*- coding:utf-8 -*-
'''
Created on 2019. 1. 30.

@author: user
'''

from flask import Flask, request
from DataBase import DBController

app=Flask(__name__)
DB=DBController()

@app.route("/SignUp",methods = ["GET","POST"])

def SignUp(): #회원가입
    DB.DBConn()    
    if 'nick'  in request.form and 'password'  in request.form:
        _userNick=request.form['nick']         
        _userPass = request.form['password']
        
        msg=str() #닉네임 중복 체크
        sql="select nick from user where nick='"+_userNick+"'"
        data = DB.DBSelect(sql)
        if data:
            msg = "overlap"
        else:
            sql = "insert into user(nick, pass) value('"+_userNick+"', password('"+_userPass+"'))"
            DB.DBChange(sql) #데이터베이스에 유저정보 저장
            msg = "succ"
    DB.DBClose()
    return msg
    
@app.route("/SignIn",methods = ["GET","POST"])

def Login(): #로그인
    DB.DBConn()  
    if 'nick'  in request.form and 'password'  in request.form:
        _userNick=request.form['nick']         
        _userPass = request.form['password']
        
    msg = str()
    sql="select idx from user where nick='"+_userNick+"' and pass=password('"+_userPass+"')"
    data = DB.DBSelect(sql) #아이디와 패스워드 일치하는지
    if data:
        msg = "login"
    else:
        msg = "fail"
        
    DB.DBClose()    
    return msg

@app.route("/Items", methods = ["GET","POST"])

def ItemInfo():
    DB.DBConn() 
    if 'name' in request.form:
        _itemName = request.form['name']
    
    msg = str()
    sql = "select hp, atk, def, speed from item where name='"+_itemName+"'"
    data = DB.DBSelect(sql)
    if data:
        hp = data[0]['hp']
        atk=data[0]['atk']
        deff=data[0]['def']
        speed=data[0]['speed']
        msg = str(hp)+","+str(atk)+","+str(deff)+","+str(speed)
        return msg

@app.route("/Friends", methods = ["GET","POST"])

def Friends():
    DB.DBConn()   
    if "flag" in request.form:
        _flag = request.form["flag"]
        _userNick = request.form["nick"]
    
        _userFriend = list() #유저 친구 목록 불러오기
        sql = "select nick from user where user.idx in (select friend.friend_idx from friend inner join user on user.idx where user.nick='"+_userNick+"')"
        _userFriend = DB.DBSelect(sql)
        sql = "select nick from user where user.idx in (select friend.user_idx from friend inner join user on user.idx=friend.friend_idx where user.nick='"+_userNick+"')"
        _userFriend+=DB.DBSelect(sql)    
                        
        if _flag=="list":
            if _userFriend:
                _friendLen = len(_userFriend)
                msg =str()
                for num in range(1,_friendLen):
                    if num==_friendLen-1:
                        msg += ( _userFriend[num]["nick"])
                    else:
                        msg += ( _userFriend[num]["nick"]+",")
            else:
                msg = "no friends"
                
        elif _flag =="del": #유저 친구 삭제하기
            _dataLen=len(_userFriend)
            _friendNick = request.form["friend"]
            sql = "delete from friend where (user_idx=(select idx from user where user.nick='"+_userNick+"') and friend_idx=(select idx from user where user.nick='"+_friendNick+"')) or (user_idx=(select idx from user where user.nick='"+_friendNick+"') and friend_idx=(select idx from user where user.nick='"+_userNick+"'))"
            DB.DBChange(sql)
            msg = "succ"
                
    DB.DBClose()
    return msg    

@app.route("/BattleEnd", methods = ["GET","POST"])

def GameEnd():
    DB.DBConn()   
    if "flag" in request.form and 'nick'  in request.form: #닉네임과 이겼는지 졌는지 불러오기
        _flag = request.form["flag"]
        _userNick = request.form["nick"]
        
        if _flag == "win" : #이겼을 경우
            sql = "select win, lose from user where nick = '"+_userNick+"'"
            data = DB.DBSelect(sql)      
            win = data[0]["win"] + 1 #이긴횟수 1회 더하기
            lose = data[0]["lose"]
            sql = "update user set win ="  + str(win) +" where nick = '"+_userNick+"'"
            DB.DBChange(sql)
            msg = (win/(win+lose))*100 #승률 계산
            return str(msg)
        
        elif _flag =="lose":
            sql = "select win, lose from user where nick = '"+_userNick+"'"
            data = DB.DBSelect(sql)      
            win = data[0]["win"]  
            lose = data[0]["lose"] + 1 #진 횟수 1회 더하기
            sql = "update user set lose ="  + str(lose) +" where nick = '"+_userNick+"'"
            DB.DBChange(sql)
            msg = (win/(win+lose))*100
            return str(msg)
    
    DB.DBClose()
        
app.run(host="192.168.0.22",port=10000, debug=True)
